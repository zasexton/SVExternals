# This is the workflow for building Qt5 on windows 10

name: Build Windows 10 Qt5

# Controls when action will run

on: 
  workflow_dispatch:
  
  #push:

jobs:
  build-windows-10-qt5-msys:
    runs-on: windows-2019

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2
    
    #- name: Setup MSVC
    #  uses: ilammy/msvc-dev-cmd@v1
    
    
    - name: Install wget
      run: |
          choco install wget
    
    - name: Setup Msys
      uses: msys2/setup-msys2@v2
      
    - name: Download Qt5
      shell: pwsh
      run: |
        cd C:
        wget https://download.qt.io/archive/qt/5.14/5.14.2/single/qt-everywhere-src-5.14.2.zip
        
    - name: Untar Qt5
      shell: pwsh
      run: |
        cd C:
        unzip ./qt-everywhere-src-5.14.2.zip
        
    - name: Configure Qt5
      shell: msys2 {0}
      run: |
        cd /C/qt-everywhere-src-5.14.2
        mkdir build
        cd build
        pacman -S --needed --noconfirm autoconf automake libtool libpcre3 libpcre3-dev build-essential libgl1-mesa-dev libglu1-mesa-dev libxcb-render0-dev
        pacman -S --needed --noconfirm libdbus-1-dev libnss3-dev libxcb-xfixes0-dev gperf bison flex byacc libxi-dev libxcomposite-dev libxcursor-dev libxtst-dev libatspi2.0-dev
        pacman -S --needed --noconfirm libx11-xcb-dev libxcb-util0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev
        pacman -S --needed --noconfirm libxcomposite-dev libdrm-dev libxdamage-dev libxrandr-dev
        ../configure -opensource -confirm-license -release -nomake examples -nomake tests -opengl desktop -skip qtconnectivity -skip qtdoc -skip qtsensors -skip qtgamepad -skip qtlocation -skip qtspeech -skip qtscxml -skip qtwebsockets -skip qtremoteobjects -skip qtquickcontrols -skip qtquickcontrols2 -skip qtmacextras -skip qtlottie -skip qtserialbus -skip qttranslations

    - name: Build Qt5
      shell: msys2 {0}
      run: |
        cd /C/qt-everywhere-src-5.14.2
        pacman -S --needed --noconfirm autoconf automake libtool libpcre3 libpcre3-dev build-essential libgl1-mesa-dev libglu1-mesa-dev libxcb-render0-dev
        pacman -S --needed --noconfirm libdbus-1-dev libnss3-dev libxcb-xfixes0-dev gperf bison flex byacc libxi-dev libxcomposite-dev libxcursor-dev libxtst-dev libatspi2.0-dev
        pacman -S --needed --noconfirm libx11-xcb-dev libxcb-util0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-render-util0-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev
        pacman -S --needed --noconfirm libxcomposite-dev libdrm-dev libxdamage-dev libxrandr-dev
        make -j2
        
    #- name: Switch to C Disk
    #  shell: pwsh
    #  run: |
    #      C:
    #      pwd
    #- name: Install LLVM and Clang
    #  uses: KyleMayes/install-llvm-action@v1
    #  with:
    #    version: "10.0"
        
    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
     
    #- name: Download and Build Qt5 
    #  shell: pwsh
    #  run: |
    #       cp -r ./patches C:
    #       C:
    #       wget https://download.qt.io/archive/qt/5.14/5.14.2/single/qt-everywhere-src-5.14.2.zip
    #       unzip .\qt-everywhere-src-5.14.2.zip -d .\qt5
    #       cd .\qt5\qt-everywhere-src-5.14.2
           
    #- name: Setup tmate session
    #  uses: mxschmitt/action-tmate@v3
      
#    - name: Download and Unzip JOM  
#      shell: pwsh
#      run: |
#           C:
#           wget https://download.qt.io/official_releases/jom/jom_1_1_3.zip
#           unzip .\jom_1_1_3.zip
           
#    - name: Apply Patches
#      shell: pwsh
#      run: |
#           C:
#           cd .\qt5\qt-everywhere-src-5.14.2
#           patch --verbose C:/qt5/qt-everywhere-src-5.14.2/qtwebengine/src/3rdparty/chromium/third_party/angle/BUILD.gn -i C:/patches/qt-5.14.2-angle.patch
#           patch --verbose C:/qt5/qt-everywhere-src-5.14.2/qtwebengine/src/3rdparty/chromium/third_party/blink/renderer/platform/graphics/lab_color_space.h -i C:/patches/qt-5.14.2-lab-color-space.patch
#           mkdir build
           
# SECOND PATCH patch --verbose C:/qt5/qt-everywhere-src-5.14.2/qtwebengine/src/3rdparty/chromium/third_party/perfetto/include/perfetto/ext/base/circular_queue.h -i C:/patches/qt-5.14.2-circular-queue.patch
#    - name: Build Qt5
#      shell: pwsh
#      run: |
#           C:
#           cd .\qt5\qt-everywhere-src-5.14.2
#           cd build
#           $path = $env:Path
#           $newpath = $path.replace("C:\msys64\usr\bin","")
#           $newpath = $newpath.replace("C:\Program Files\Git\usr\bin","")
#           $newpath = ($newpath + ";C:\msys64\usr\bin"+";C:\Program Files\Git\usr\bin")
#           $env:Path = $newpath
#           ..\configure.bat -release -mp -prefix "%CD%\qtbase" -opensource -confirm-license -nomake examples -nomake tests -opengl desktop -skip qtconnectivity -skip qtdoc -skip qtsensors -skip qtgamepad -skip qtlocation -skip qtspeech -skip qtscxml -skip qtwebsockets -skip qtremoteobjects -skip qtquickcontrols -skip qtquickcontrols2 -skip qtmacextras -skip qtlottie -skip qtserialbus -skip qttranslations -skip qtwebview
#           C:\jom.exe
        
    - name: Archive build artifact
      uses: actions/upload-artifact@v2
      with:
        name: qt-5.14.2-windows
        path: C:\qt5\qt-everywhere-src-5.14.2\build\qtbase
